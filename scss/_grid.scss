// Variáveis do Grid

$cols: 12;
$gutter: 20px;
$breakpoints: (
  large: 1200px,
  medium: 760px,
  small: 480px,
);

// Mixin media-query
@mixin device($size) {
  @if $size == large {
    @media screen and (min-width: map-get($breakpoints, large)) {
      @content;
    }
  } @else if $size == medium {
    @media screen and (min-width: map-get($breakpoints, medium)) and (max-width: #{map-get($breakpoints, large) - 1}) {
      @content;
    }
  } @else if $size == small {
    @media screen and (max-width: #{map-get($breakpoints, small) - 1}) {
      @content;
    }
  }
}

// Função do Grid
@function grid($col, $offset: false) {
  $width: percentage($col / $cols);
  $result: calc(#{$width} - #{$gutter});

  @if $offset == offset {
    $gutter: $gutter / 2;
    $result: calc(#{$width} + #{$gutter});
  }

  @return $result;
}

// Gera o Grid
@for $i from 1 through $cols {
  .grid-#{$i} {
    width: grid($i);
  }
}

// Mixin estrutura do Grid
@mixin grid-structure {
  float: left;
  min-height: 1px;
  margin-left: $gutter / 2;
  margin-right: $gutter / 2;

  @include device(small) {
    width: 100%;
    float: none;
    margin-left: 0;
    margin-right: 0;
  }
}

[class^='grid-'] {
  @include grid-structure;
}

// Gera as classes de offset
@for $i from 1 through $cols {
  .offset-#{$i} {
    margin-left: grid($i, offset);
    @extend %offset;
  }
}

@include device(small) {
  %offset {
    margin-left: 0;
  }
}

// Mixin clearfix
@mixin clearfix {
  &::after,
  &::before {
    content: '';
    display: table;
    clear: both;
  }
}

// Mixin container
@mixin container {
  max-width: map-get($breakpoints, large);
  margin: 0 auto;
  position: relative;

  @include device(medium) {
    max-width: map-get($breakpoints, medium);
  }
  @include device(small) {
    max-width: map-get($breakpoints, small);
    margin-inline: 10px;
  }
  @include clearfix;
}

.container {
  @include container;
}
