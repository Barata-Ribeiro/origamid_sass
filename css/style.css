@charset "UTF-8";
/***
    The new CSS reset - version 1.8.5 (last updated 14.6.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/
/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    - The "html" attribute is exclud, because otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
 */
*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
  all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
  content: initial;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element */
:where([contenteditable]:not([contenteditable=false])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable=true]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
}

.grid-1 {
  width: calc(8.3333333333% - 20px);
}

.grid-2 {
  width: calc(16.6666666667% - 20px);
}

.grid-3 {
  width: calc(25% - 20px);
}

.grid-4 {
  width: calc(33.3333333333% - 20px);
}

.grid-5 {
  width: calc(41.6666666667% - 20px);
}

.grid-6 {
  width: calc(50% - 20px);
}

.grid-7 {
  width: calc(58.3333333333% - 20px);
}

.grid-8 {
  width: calc(66.6666666667% - 20px);
}

.grid-9 {
  width: calc(75% - 20px);
}

.grid-10 {
  width: calc(83.3333333333% - 20px);
}

.grid-11 {
  width: calc(91.6666666667% - 20px);
}

.grid-12 {
  width: calc(100% - 20px);
}

[class^=grid-] {
  float: left;
  min-height: 1px;
  margin-left: 10px;
  margin-right: 10px;
}
@media screen and (max-width: 479px) {
  [class^=grid-] {
    width: 100%;
    float: none;
    margin-left: 0;
    margin-right: 0;
  }
}

.offset-1 {
  margin-left: calc(8.3333333333% + 10px);
}

.offset-2 {
  margin-left: calc(16.6666666667% + 10px);
}

.offset-3 {
  margin-left: calc(25% + 10px);
}

.offset-4 {
  margin-left: calc(33.3333333333% + 10px);
}

.offset-5 {
  margin-left: calc(41.6666666667% + 10px);
}

.offset-6 {
  margin-left: calc(50% + 10px);
}

.offset-7 {
  margin-left: calc(58.3333333333% + 10px);
}

.offset-8 {
  margin-left: calc(66.6666666667% + 10px);
}

.offset-9 {
  margin-left: calc(75% + 10px);
}

.offset-10 {
  margin-left: calc(83.3333333333% + 10px);
}

.offset-11 {
  margin-left: calc(91.6666666667% + 10px);
}

.offset-12 {
  margin-left: calc(100% + 10px);
}

@media screen and (max-width: 479px) {
  .offset-1, .offset-2, .offset-3, .offset-4, .offset-5, .offset-6, .offset-7, .offset-8, .offset-9, .offset-10, .offset-11, .offset-12 {
    margin-left: 0;
  }
}
.container {
  max-width: 1200px;
  margin: 0 auto;
  position: relative;
}
@media screen and (min-width: 760px) and (max-width: 1199px) {
  .container {
    max-width: 760px;
  }
}
@media screen and (max-width: 479px) {
  .container {
    max-width: 480px;
    margin-inline: 10px;
  }
}
.container::after, .container::before {
  content: "";
  display: table;
  clear: both;
}

/*# sourceMappingURL=style.css.map */
